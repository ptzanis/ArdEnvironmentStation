V 12
2
LANG:1 22 Choose Date / Time ...
LANG:10001 22 Choose Date / Time ...
PANEL,-1 -1 325 445 N {227,227,227} 2
"$sSelectedDate"
"$sTimeZone"
"main()
{
    titleBar(0);  
    g_bCorrectFormat = TRUE;
  
    if(isDollarDefined(\"$sTimeZone\") && getDollarValue(\"$sTimeZone\") != \"\") {
        selectedTimeZone.text = $sTimeZone;
    }
    else {
        selectedTimeZone.text = FW_GENERAL_TIMEZONE_LOCAL;
    }
  
    setInitialTime();
}" 0
 E E E E 1 -1 -1 0  100 70
""0  1
E "time g_tSelectedDate;
bool g_bCorrectFormat;

// ------------------------------------------------------------------------------------------------

showDate()
{
  int iYear = year(g_tSelectedDate);
  int iMonth = month(g_tSelectedDate);
  int iDay = day(g_tSelectedDate);
  int iHour = spinHour.text();
  int iMinute = spinMinute.text();
  int iSecond = spinSecond.text();
  
  g_tSelectedDate = makeTime(iYear, iMonth, iDay, iHour, iMinute, iSecond);  
  
  showTime();
}

// ------------------------------------------------------------------------------------------------

setInitialTime()
{
  if(isDollarDefined(\"$sSelectedDate\"))
  {
    g_tSelectedDate = $sSelectedDate;
    showTime();
  }
  else
  {
    setTimeNow();
  }
}

// ------------------------------------------------------------------------------------------------

setTimeNow()
{
  time tNow = getCleanedCurrentTime(); 
  
  g_tSelectedDate = tNow;
  
  showTime();
}

// ------------------------------------------------------------------------------------------------

setTimeToControls(string sTime)
{ 
  bool bOk;
  time tTemp;
    
  strreplace(sTime, \" - \", \" \");
  bOk = fwGeneral_hasCorrectFormat(sTime);
  
  if (bOk)
  {
    g_bCorrectFormat = TRUE;  
    textFieldDateTime.backCol(\"_Window\");
    tTemp = fwGeneral_stringToDate(sTime);
    g_tSelectedDate = tTemp;
    
    calendar.selectedDate(g_tSelectedDate);
    spinHour.text(hour(g_tSelectedDate));
    spinMinute.text(minute(g_tSelectedDate));
    spinSecond.text(second(g_tSelectedDate));  
    sliderHour.value(hour(g_tSelectedDate));
    sliderMinute.value(minute(g_tSelectedDate));
    sliderSecond.value(second(g_tSelectedDate)); 
  }
  else
  { 
    g_bCorrectFormat = FALSE;   
    textFieldDateTime.backCol(\"unLine_WRL\");  
  }
}

// ------------------------------------------------------------------------------------------------

showTime()
{  
  calendar.selectedDate(g_tSelectedDate);
  spinHour.text(hour(g_tSelectedDate));
  spinMinute.text(minute(g_tSelectedDate));
  spinSecond.text(second(g_tSelectedDate));
  
  sliderHour.value(hour(g_tSelectedDate));
  sliderMinute.value(minute(g_tSelectedDate));
  sliderSecond.value(second(g_tSelectedDate)); 
  
  textFieldDateTime.text(formatTime(FW_GENERAL_NATURAL_TIME_FORMAT, g_tSelectedDate));  
}

// ------------------------------------------------------------------------------------------------

time getCleanedCurrentTime()
{
  time tNow;
  
  tNow = getCurrentTime(); 
  if(selectedTimeZone.text == FW_GENERAL_TIMEZONE_UTC)
  {
    tNow = formatTimeUTC(FW_GENERAL_GENERIC_TIME_FORMAT, tNow);
  }
  
  return tNow;
}

// ------------------------------------------------------------------------------------------------

returnDate()
{
  string sDateTime;
  time tNow;
  
  sDateTime = formatTime(FW_GENERAL_NATURAL_TIME_FORMAT, g_tSelectedDate);
  strreplace(sDateTime, \" - \", \" \");

  if(fwGeneral_hasCorrectFormat(sDateTime) && g_bCorrectFormat)
  {
    tNow = getCleanedCurrentTime(); 
  
    if (period(g_tSelectedDate) <= period(tNow))
    {
      PanelOffReturn(makeDynFloat(1.0), makeDynString(g_tSelectedDate));      
    }
    else
    {
      ChildPanelOnCentralModal(
          \"vision/MessageInfo1\", 
          \"Error\",
          makeDynString(\"$1:Date and time cannot be in the future.\\nSet to current.\")
        );
    }
  }
  else
  {
    ChildPanelOnCentralModal(
        \"vision/MessageInfo1\", 
        \"Error\",
        makeDynString(\"$1:Wrong date or time format.\\nPlease correct.\")
     );
  }
}





" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
29 0
"calendar"
""
1 -13 -15 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
0 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

0
2
LANG:1 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  0 0 324 199
8 Calendar
1
0 "clicked" "(time date)"
"  g_tSelectedDate = date;
  showDate();"
E30 3
"FRAME3"
""
1 20 24 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
3 0 0 0 0 0
E E E
1
2
LANG:1 0 
LANG:10001 0 

1
"dashclr"N "_Transparent"
E E 0 0 1 0 1 E 1.2 0 0.8292682926829268 -23 185.0975609756098 0 E 20 24 291 271
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0 2
LANG:1 4 Time
LANG:10001 4 Time
21 12
"spinHour"
""
1 495 25 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
12 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

0
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  208 218 311 244
0

E
"main()
{
  showDate();
  sliderHour.value(this.text());
}" 0

E

N 0 23 1 0 1 1
29 13
"sliderHour"
""
1 620 85 E E E 1 E 1 E N {236,236,236} E N {227,227,227} E E
 E E
13 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

6
"inputMethodHints" "enum 0"
"contextMenuPolicy" "enum 1"
"layoutDirection" "enum 0"
"tickPosition" "enum 0"
"maxValue" "int 23"
"orientation" "enum 0"
2
LANG:1 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  11 253 313 272
12 SliderWidget
1
0 "Change" "(int value)"
"  spinHour.text(value);
  showDate();"
E29 14
"sliderMinute"
""
1 620 80 E E E 1 E 1 E N {236,236,236} E N {227,227,227} E E
 E E
14 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

6
"maxValue" "int 59"
"orientation" "enum 0"
"tickPosition" "enum 0"
"layoutDirection" "enum 0"
"contextMenuPolicy" "enum 1"
"inputMethodHints" "enum 0"
2
LANG:1 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  11 316 313 335
12 SliderWidget
1
0 "Change" "(int value)"
"  spinMinute.text(value);
  showDate();"
E29 15
"sliderSecond"
""
1 300 165 E E E 1 E 1 E N {236,236,236} E N {227,227,227} E E
 E E
15 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

2
"maxValue" "int 59"
"orientation" "enum 0"
2
LANG:1 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  11 379 313 398
12 SliderWidget
1
0 "Change" "(int value)"
"  spinSecond.text(value);
  showDate();"
E21 16
"spinMinute"
""
1 499 35 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
16 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

0
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  212 286 315 312
0

E
"main()
{
  showDate();
  sliderMinute.value(this.text());
}" 0

E

N 0 59 1 0 1 1
21 17
"spinSecond"
""
1 504 157 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

0
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  212 350 315 376
0

E
"main()
{
  showDate();
  sliderSecond.value(this.text());
}" 0

E

N 0 59 1 0 1 1
2 19
"PRIMITIVE_TEXT1"
""
1 11 229 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
19 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 11 229 49 242
0 2 2 "0s" 0 0 0 192 0 0  11 229 1
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0 2
LANG:1 6 Hours:
LANG:10001 6 Hours:
2 20
"PRIMITIVE_TEXT2"
""
1 11 292 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
20 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 11 292 58 305
0 2 2 "0s" 0 0 0 192 0 0  11 292 1
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0 2
LANG:1 8 Minutes:
LANG:10001 8 Minutes:
2 21
"PRIMITIVE_TEXT3"
""
1 11 355 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
21 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  0 E 11 355 61 368
0 2 2 "0s" 0 0 0 192 0 0  11 355 1
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0 2
LANG:1 8 Seconds:
LANG:10001 8 Seconds:
13 22
"pushButtonNow"
""
1 25 202.875 E E E 1 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
23 0 0 0 0 0
E E E
0
2
LANG:1 20 Set date/time to now
LANG:10001 20 Set date/time to now

0
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  8 412 71 440

T 
2
LANG:1 3 Now
LANG:10001 3 Now
"main()
{
  setTimeNow();
}" 0
 E E E
13 23
"pushButtonOK"
""
1 371 284 E E E 1 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
24 0 0 0 0 0
E E E
0
2
LANG:1 22 Use selected date/time
LANG:10001 22 Use selected date/time

0
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  258 412 321 440

T 
2
LANG:1 2 OK
LANG:10001 2 OK
"main()
{
  returnDate();
}" 0
 E E E
14 26
"selectedTimeZone"
""
1 10 524 E E E 0 E 0 E N "_WindowText" E N "_Window" E E
 E E
26 0 0 0 0 0
E E E
0
2
LANG:1 26 Current selected time zone
LANG:10001 26 Current selected time zone

0
2
LANG:1 26 Arial,10,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  8 522 91 548
2 "0s" 0 0 0 1 0 -1  E E E
14 27
"textFieldDateTime"
""
1 59 417 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
27 0 0 0 0 0
E E E
0
2
LANG:1 28 Edit to change date and time
LANG:10001 28 Edit to change date and time

1
"textChangedCB" "main(string newText)
{
  setTimeToControls(newText);
}"
2
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
LANG:10001 26 Arial,10,-1,5,50,0,0,0,0,0
0  78 415 251 438
3 "0s" 0 0 0 0 0 -1  E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
